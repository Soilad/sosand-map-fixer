from PIL import Image, ImageChops
from os import getcwd
from collections import defaultdict

cwd = getcwd()

l = [
    "(195, 92, 109)",
    "(153, 116, 93)",
    "(56, 96, 56)",
    "(111, 71, 71)",
    "(20, 133, 237)",
    "(194, 198, 215)",
    "(36, 132, 247)",
    "(68, 81, 113)",
    "(50, 135, 175)",
    "(200, 56, 93)",
    "(75, 77, 186)",
    "(199, 213, 224)",
    "(219, 219, 119)",
    "(80, 159, 90)",
    "(88, 161, 193)",
    "(73, 72, 77)",
    "(197, 92, 106)",
    "(163, 142, 75)",
    "(199, 135, 73)",
    "(167, 87, 90)",
    "(52, 88, 138)",
    "(193, 171, 8)",
    "(61, 117, 232)",
    "(54, 167, 156)",
    "(85, 228, 233)",
    "(121, 92, 159)",
    "(168, 174, 198)",
    "(78, 125, 115)",
    "(134, 110, 82)",
    "(215, 196, 72)",
    "(42, 22, 24)",
    "(224, 5, 5)",
    "(87, 90, 127)",
    "(67, 127, 63)",
    "(79, 111, 150)",
    "(42, 45, 96)",
    "(154, 104, 103)",
    "(223, 192, 135)",
    "(202, 206, 253)",
    "(255, 201, 178)",
    "(51, 155, 0)",
    "(242, 205, 94)",
    "(98, 176, 198)",
    "(237, 162, 186)",
    "(63, 31, 45)",
    "(252, 114, 121)",
    "(118, 142, 186)",
    "(239, 228, 232)",
    "(201, 0, 1)",
    "(244, 61, 111)",
    "(194, 150, 87)",
    "(245, 12, 55)",
    "(149, 45, 102)",
    "(202, 149, 118)",
    "(114, 140, 217)",
    "(39, 116, 70)",
    "(189, 140, 110)",
    "(166, 52, 67)",
    "(196, 181, 130)",
    "(93, 181, 227)",
    "(246, 162, 134)",
    "(109, 148, 130)",
    "(90, 143, 123)",
    "(113, 107, 121)",
    "(94, 118, 190)",
    "(185, 86, 106)",
    "(178, 114, 99)",
    "(55, 78, 92)",
    "(0, 41, 23)",
    "(10, 43, 36)",
    "(155, 74, 89)",
    "(217, 217, 217)",
    "(92, 77, 50)",
    "(208, 163, 108)",
    "(222, 181, 27)",
    "(84, 156, 139)",
    "(42, 112, 84)",
    "(69, 105, 217)",
    "(227, 152, 156)",
    "(104, 151, 82)",
    "(171, 190, 152)",
    "(86, 72, 87)",
    "(175, 163, 88)",
    "(0, 56, 147)",
    "(90, 64, 42)",
    "(121, 100, 95)",
    "(59, 113, 79)",
    "(197, 174, 120)",
    "(42, 111, 83)",
    "(58, 65, 75)",
    "(0, 42, 48)",
    "(111, 35, 115)",
    "(39, 150, 120)",
    "(91, 77, 92)",
    "(158, 138, 87)",
    "(129, 84, 88)",
    "(38, 88, 77)",
    "(151, 68, 176)",
    "(187, 170, 126)",
    "(12, 56, 39)",
    "(198, 190, 117)",
    "(89, 77, 63)",
    "(165, 116, 111)",
    "(114, 136, 119)",
    "(20, 45, 76)",
    "(130, 50, 20)",
    "(78, 50, 53)",
    "(139, 220, 10)",
    "(114, 85, 166)",
    "(72, 48, 109)",
    "(206, 140, 162)",
    "(206, 32, 39)",
    "(59, 56, 0)",
    "(184, 117, 124)",
    "(153, 176, 74)",
    "(202, 110, 123)",
    "(159, 136, 198)",
    "(145, 178, 190)",
    "(48, 71, 123)",
    "(226, 180, 144)",
    "(118, 112, 178)",
    "(194, 122, 107)",
    "(68, 53, 92)",
    "(252, 209, 22)",
    "(93, 183, 230)",
    "(218, 189, 129)",
    "(32, 90, 78)",
    "(200, 100, 150)",
    "(0, 123, 95)",
    "(219, 196, 120)",
    "(215, 20, 26)",
    "(24, 94, 97)",
    "(212, 191, 110)",
    "(102, 131, 171)",
    "(85, 171, 112)",
    "(167, 140, 42)",
    "(222, 187, 91)",
    "(21, 51, 35)",
    "(146, 155, 162)",
    "(162, 74, 88)",
    "(166, 77, 99)",
    "(240, 90, 39)",
    "(209, 153, 106)",
    "(114, 159, 190)",
    "(60, 53, 88)",
    "(86, 75, 57)",
    "(81, 61, 118)",
    "(180, 150, 120)",
    "(255, 201, 14)",
    "(41, 47, 133)",
    "(197, 96, 100)",
    "(128, 55, 84)",
    "(221, 190, 196)",
    "(76, 145, 63)",
    "(65, 104, 147)",
    "(131, 54, 64)",
    "(60, 110, 85)",
    "(146, 130, 79)",
    "(80, 144, 171)",
    "(209, 108, 120)",
    "(220, 191, 123)",
    "(77, 73, 134)",
    "(249, 146, 98)",
    "(18, 173, 43)",
    "(196, 189, 204)",
    "(29, 56, 65)",
    "(103, 135, 146)",
    "(154, 75, 160)",
    "(43, 56, 90)",
    "(44, 24, 35)",
    "(161, 30, 36)",
    "(226, 12, 12)",
    "(34, 86, 47)",
    "(40, 170, 76)",
    "(237, 28, 36)",
    "(161, 84, 104)",
    "(204, 166, 108)",
    "(14, 54, 62)",
    "(57, 143, 97)",
    "(44, 140, 4)",
    "(237, 167, 32)",
    "(173, 88, 93)",
    "(143, 73, 82)",
    "(193, 217, 167)",
    "(185, 122, 87)",
    "(155, 101, 107)",
    "(136, 157, 188)",
    "(57, 113, 228)",
    "(179, 149, 0)",
    "(255, 117, 120)",
    "(145, 157, 236)",
    "(210, 165, 108)",
    "(87, 95, 134)",
    "(0, 190, 240)",
    "(174, 192, 156)",
    "(218, 209, 233)",
    "(37, 48, 65)",
    "(178, 34, 53)",
    "(90, 80, 198)",
    "(109, 187, 209)",
    "(10, 54, 176)",
    "(5, 91, 142)",
    "(21, 37, 81)",
    "(117, 207, 133)",
    "(102, 96, 87)",
    "(102, 102, 102)",
    "(51, 34, 42)",
    "(204, 110, 117)",
    "(149, 47, 47)",
    "(207, 12, 39)",
    "(218, 230, 92)",
    "(224, 139, 13)",
    "(96, 140, 194)",
    "(214, 180, 144)",
    "(130, 139, 171)",
    "(156, 91, 113)",
    "(74, 99, 41)",
    "(0, 127, 13)",
    "(125, 13, 24)",
    "(235, 247, 247)",
    "(211, 184, 180)",
    "(201, 191, 183)",
    "(180, 186, 224)",
    "(255, 166, 146)",
    "(255, 212, 2)",
    "(179, 123, 105)",
    "(232, 106, 118)",
    "(232, 143, 72)",
    "(72, 140, 84)",
    "(86, 165, 82)",
    "(31, 122, 92)",
    "(35, 69, 41)",
    "(89, 80, 110)",
    "(13, 70, 130)",
    "(72, 73, 126)",
    "(99, 106, 143)",
    "(152, 130, 191)",
    "(102, 30, 52)",
    "(251, 131, 128)",
    "(185, 103, 74)",
    "(40, 128, 255)",
    "(130, 141, 124)",
    "(77, 120, 90)",
    "(157, 160, 159)",
    "(190, 176, 215)",
    "(196, 173, 199)",
    "(162, 144, 161)",
    "(69, 95, 77)",
    "(156, 128, 125)",
    "(0, 40, 101)",
    "(170, 10, 10)",
    "(120, 38, 38)",
    "(226, 135, 40)",
    "(95, 174, 95)",
    "(184, 92, 1)",
    "(119, 48, 39)",
    "(129, 138, 163)",
    "(245, 140, 151)",
    "(140, 104, 115)",
    "(178, 212, 191)",
    "(86, 102, 85)",
    "(76, 82, 98)",
    "(75, 105, 91)",
    "(108, 140, 42)",
    "(173, 47, 50)",
    "(11, 54, 24)",
    "(148, 133, 58)",
    "(3, 129, 5)",
    "(102, 142, 201)",
    "(45, 87, 147)",
    "(97, 185, 223)",
    "(60, 76, 156)",
    "(22, 49, 82)",
    "(231, 204, 118)",
    "(152, 149, 187)",
    "(68, 150, 86)",
    "(140, 166, 115)",
    "(3, 113, 174)",
    "(165, 26, 49)",
    "(116, 43, 89)",
    "(186, 201, 171)",
    "(40, 50, 120)",
    "(100, 9, 10)",
    "(3, 15, 72)",
    "(130, 53, 51)",
    "(138, 95, 94)",
    "(116, 161, 173)",
    "(102, 78, 55)",
    "(96, 93, 99)",
    "(229, 195, 134)",
    "(255, 117, 152)",
    "(64, 160, 167)",
    "(255, 159, 132)",
    "(124, 166, 212)",
    "(176, 187, 249)",
    "(109, 63, 76)",
    "(34, 112, 138)",
    "(41, 94, 87)",
    "(53, 132, 52)",
    "(100, 153, 104)",
    "(63, 196, 183)",
    "(62, 196, 159)",
    "(70, 82, 157)",
    "(47, 100, 74)",
    "(143, 117, 96)",
    "(89, 110, 106)",
    "(101, 135, 121)",
    "(182, 166, 101)",
    "(191, 30, 36)",
    "(222, 184, 110)",
    "(199, 187, 164)",
    "(168, 151, 111)",
    "(201, 193, 134)",
    "(176, 121, 118)",
    "(102, 77, 70)",
    "(217, 140, 104)",
    "(173, 83, 114)",
    "(163, 74, 119)",
    "(249, 126, 98)",
    "(255, 147, 139)",
    "(196, 129, 119)",
    "(220, 220, 220)",
    "(181, 175, 194)",
    "(233, 234, 227)",
    "(58, 115, 97)",
    "(66, 113, 69)",
    "(74, 143, 74)",
    "(115, 158, 134)",
    "(185, 204, 172)",
    "(31, 62, 79)",
    "(107, 43, 1)",
    "(107, 78, 77)",
    "(107, 124, 142)",
    "(1, 125, 207)",
    "(161, 168, 191)",
    "(122, 94, 116)",
    "(191, 119, 173)",
    "(233, 175, 221)",
    "(209, 205, 153)",
    "(255, 255, 119)",
    "(229, 185, 92)",
    "(54, 66, 107)",
    "(156, 169, 202)",
    "(181, 164, 164)",
    "(230, 217, 226)",
    "(197, 206, 230)",
    "(75, 80, 102)",
    "(3, 125, 37)",
    "(255, 127, 39)",
    "(62, 69, 65)",
    "(162, 20, 0)",
    "(135, 148, 141)",
    "(102, 74, 58)",
    "(194, 207, 189)",
    "(77, 89, 105)",
    "(0, 102, 122)",
    "(179, 15, 6)",
    "(166, 106, 147)",
    "(149, 150, 171)",
    "(230, 127, 148)",
    "(191, 136, 162)",
    "(187, 156, 201)",
    "(0, 69, 154)",
    "(151, 130, 73)",
    "(77, 64, 5)",
    "(218, 206, 175)",
    "(1, 89, 132)",
    "(251, 224, 67)",
    "(181, 150, 75)",
    "(85, 1, 0)",
    "(142, 142, 129)",
    "(154, 168, 127)",
    "(153, 69, 116)",
    "(0, 122, 167)",
    "(157, 25, 48)",
    "(239, 238, 215)",
    "(178, 190, 191)",
    "(229, 232, 238)",
    "(29, 75, 212)",
    "(129, 76, 158)",
    "(199, 164, 153)",
    "(122, 188, 208)",
    "(196, 197, 215)",
    "(130, 72, 96)",
    "(151, 130, 190)",
    "(255, 120, 71)",
    "(185, 255, 152)",
    "(71, 190, 152)",
    "(80, 115, 45)",
    "(105, 90, 132)",
    "(82, 2, 15)",
    "(114, 148, 80)",
    "(71, 113, 97)",
    "(222, 84, 10)",
    "(163, 183, 214)",
    "(107, 107, 107)",
    "(150, 71, 70)",
    "(51, 13, 178)",
    "(242, 205, 95)",
    "(0, 107, 51)",
    "(135, 104, 60)",
    "(161, 161, 161)",
    "(204, 204, 0)",
    "(95, 206, 247)",
    "(70, 94, 150)",
    "(146, 106, 160)",
    "(203, 154, 104)",
    "(0, 76, 152)",
    "(75, 47, 52)",
    "(143, 20, 20)",
    "(42, 96, 59)",
    "(0, 148, 255)",
    "(160, 82, 45)",
    "(185, 226, 255)",
    "(105, 50, 0)",
    "(15, 32, 75)",
    "(158, 26, 54)",
    "(0, 212, 166)",
    "(117, 57, 25)",
    "(42, 69, 145)",
    "(206, 92, 23)",
    "(22, 0, 85)",
    "(10, 40, 70)",
    "(255, 240, 60)",
    "(124, 201, 241)",
    "(203, 84, 32)",
    "(172, 214, 236)",
    "(204, 172, 120)",
    "(230, 144, 68)",
    "(62, 219, 234)",
    "(74, 65, 184)",
    "(161, 200, 220)",
    "(202, 208, 115)",
    "(219, 72, 78)",
    "(171, 106, 130)",
    "(150, 60, 67)",
    "(36, 69, 138)",
    "(248, 225, 231)",
    "(214, 204, 97)",
    "(238, 218, 218)",
    "(245, 12, 56)",
    "(249, 242, 228)",
    "(156, 44, 72)",
    "(0, 103, 170)",
    "(0, 38, 84)",
    "(212, 46, 18)",
    "(1, 112, 193)",
    "(162, 67, 0)",
    "(49, 58, 176)",
    "(255, 110, 0)",
    "(44, 84, 83)",
    "(99, 96, 141)",
    "(249, 110, 91)",
    "(156, 189, 140)",
    "(115, 102, 66)",
    "(54, 54, 54)",
    "(46, 74, 101)",
    "(103, 132, 128)",
    "(224, 222, 246)",
    "(185, 250, 230)",
]


def count_colors(image):
    # Convert the image to RGB mode (if it's not already)
    image = image.convert("RGB")

    # Create a dictionary to store color counts
    color_counts = defaultdict(int)

    # Get the dimensions of the image
    width, height = image.size

    # Iterate through each pixel
    for x in range(width):
        for y in range(height):
            # Get the RGB color of the pixel
            r, g, b = image.getpixel((x, y))
            if (r, g, b) not in ((0, 0, 0), (126, 142, 158), (105, 118, 132)):
                # Increment the count for this color
                color_counts[(r, g, b)] += 1

    return color_counts


def main():
    # Path to the image file
    image_path = Image.open(f"{cwd}/map.png")  # Replace with your image file path
    oceanless = Image.open(f"{cwd}/oceanless.png")
    provinceless = Image.open(f"{cwd}/provinceless.png")
    output = ImageChops.add(ImageChops.multiply(image_path, oceanless), provinceless)
    output.save(f"{cwd}/output.png")

    # Count the colors in the image
    color_counts = count_colors(image_path)

    # Print the results
    print("Color Counts:")
    for color, count in color_counts.items():
        print(
            f"Color: {color}, Count: {count}"
            if str(color) in l
            else f"ono, {color} isnt a country"
        )
    print(len(color_counts))


if __name__ == "__main__":
    main()
